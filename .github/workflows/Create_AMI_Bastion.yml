name: Build Bastion AMI Image

on:
  workflow_dispatch:
    inputs:
      aws_account:
        description: "AWS Account to use"
        required: true
        type: choice
        options:
          - alexander-test
          - eliza-dev
          - emir-production

      region:
        description: "AWS region to build AMI"
        required: true
        type: choice
        options:
          - ca-central-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2

jobs:
  build-image:
    runs-on: ubuntu-latest
    environment: ${{ inputs.region }}
    steps:
      - name: Checkout Current Repository (ProjectNagiosWorkflows)
        uses: actions/checkout@v4
        with:
          path: ProjectNagiosWorkflows

      - name: Checkout Private Repository (ProjectNagios)
        uses: actions/checkout@v4
        with:
          repository: "DevOps-Triumvirat/ProjectNagios"
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: ProjectNagios

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "1.10.0"

      - name: Configure AWS Credentials (Alexander Test)
        if: ${{ inputs.aws_account == 'alexander-test' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
          aws-region: ${{ inputs.region }}

      - name: Configure AWS Credentials (Eliza Dev)
        if: ${{ inputs.aws_account == 'eliza-dev' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ inputs.region }}

      - name: Configure AWS Credentials (Emir Production)
        if: ${{ inputs.aws_account == 'emir-production' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
          aws-region: ${{ inputs.region }}

      - name: Modify Packer file with workflow inputs
        working-directory: ProjectNagios/Packer
        run: |
          # Create a copy of the original file with modifications
          cp server_bastion.pkr.hcl server_bastion_build.pkr.hcl
          
          # Update region in the Packer file
          sed -i 's/region\s*=\s*"[^"]*"/region = "${{ inputs.region }}"/g' server_bastion_build.pkr.hcl
          
          # Update instance_type in the Packer file (hardcoded to t3.small)
          sed -i 's/instance_type\s*=\s*"[^"]*"/instance_type = "t3.small"/g' server_bastion_build.pkr.hcl
          
          # Update ami_name in the Packer file (hardcoded to Bastion-ami)
          sed -i 's/ami_name\s*=\s*"[^"]*"/ami_name = "Bastion-ami"/g' server_bastion_build.pkr.hcl
          
          # Update BuiltBy tag
          sed -i 's/BuiltBy\s*=\s*"[^"]*"/BuiltBy = "${{ inputs.aws_account }}"/g' server_bastion_build.pkr.hcl
          
          echo "Modified Packer configuration:"
          echo "Region: ${{ inputs.region }}"
          echo "Instance Type: t3.small"
          echo "AMI Name: Bastion-ami"
          echo "Built By: ${{ inputs.aws_account }}"

      - name: Packer Init
        working-directory: ProjectNagios/Packer
        run: packer init server_bastion_build.pkr.hcl

      - name: Packer Validate
        working-directory: ProjectNagios/Packer
        run: packer validate server_bastion_build.pkr.hcl

      - name: Packer Build
        working-directory: ProjectNagios/Packer
        run: |
          echo "Starting Packer build for Bastion AMI..."
          echo "Region: ${{ inputs.region }}"
          echo "Instance Type: t3.small"
          echo "AMI Name: Bastion-ami"
          echo "AWS Account: ${{ inputs.aws_account }}"
          
          packer build server_bastion_build.pkr.hcl

      - name: Get AMI Information
        working-directory: ProjectNagios/Packer
        run: |
          echo "Packer build completed successfully!"
          echo "AMI has been created in region: ${{ inputs.region }}"
          echo "Built using account: ${{ inputs.aws_account }}"
          
          # Get the most recent AMI with our naming pattern
          AMI_ID=$(aws ec2 describe-images \
            --region ${{ inputs.region }} \
            --owners self \
            --filters "Name=name,Values=Bastion-ami*" \
            --query 'Images | sort_by(@, &CreationDate) | [-1].ImageId' \
            --output text)
          
          if [ "$AMI_ID" != "None" ] && [ "$AMI_ID" != "" ]; then
            echo "Created AMI ID: $AMI_ID"
            
            # Get AMI details
            aws ec2 describe-images \
              --region ${{ inputs.region }} \
              --image-ids $AMI_ID \
              --query 'Images[0].{Name:Name,ImageId:ImageId,State:State,CreationDate:CreationDate}' \
              --output table
          else
            echo "Warning: Could not retrieve AMI information"
          fi
